# Example config file /etc/vsftpd.conf
#
# The default compiled in settings are fairly paranoid. This sample file
# loosens things up a bit, to make the ftp daemon more usable.
# Please see vsftpd.conf.5 for all compiled in defaults.
#
# READ THIS: This example file is NOT an exhaustive list of vsftpd options.
# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's
# capabilities.
#
#
# Run standalone?  vsftpd can run either from an inetd or as a standalone
# daemon started from an initscript.
listen=YES
#
# Run standalone with IPv6?
# Like the listen parameter, except vsftpd will listen on an IPv6 socket
# instead of an IPv4 one. This parameter and the listen parameter are mutually
# exclusive.
listen_ipv6=<%= @listen_ipv6 %>
#
# Allow anonymous FTP? (Beware - allowed by default if you comment this out).
anonymous_enable=<%= @anonymous_enable %>
#
# Uncomment this to allow local users to log in.
local_enable=<%= @local_enable %>
#
# Uncomment this to enable any form of FTP write command.
write_enable=<%= @write_enable %>
<% if @allow_writeable_chroot == 'YES' -%>
#
# Fix write permissions for chrooted FTP Users
allow_writeable_chroot=YES
<% end -%>
<% if @seccomp_sandbox -%>
seccomp_sandbox=<%= @seccomp_sandbox -%>
<% end -%>
#
#
# Default umask for local users is 077. You may wish to change this to 022,
# if your users expect that (022 is used by most other ftpd's)
local_umask=<%= @local_umask %>
#
# Uncomment this to allow the anonymous FTP user to upload files. This only
# has an effect if the above global write enable is activated. Also, you will
# obviously need to create a directory writable by the FTP user.
anon_upload_enable=<%= @anon_upload_enable %>
#
# Uncomment this if you want the anonymous FTP user to be able to create
# new directories.
anon_mkdir_write_enable=<%= @anon_mkdir_write_enable %>
#
# Activate directory messages - messages given to remote users when they
# go into a certain directory.
dirmessage_enable=<%= @dirmessage_enable %>
#
# If enabled, vsftpd will display directory listings with the time
# in  your  local  time  zone.  The default is to display GMT. The
# times returned by the MDTM FTP command are also affected by this
# option.
use_localtime=<%= @use_localtime %>
#
# Activate logging of uploads/downloads.
xferlog_enable=<%= @xferlog_enable %>
#
# Make sure PORT transfer connections originate from port 20 (ftp-data).
connect_from_port_20=<%= @connect_from_port_20 %>
#
# Syslog
syslog_enable=<%= @syslog_enable %>
#
# If you want, you can arrange for uploaded anonymous files to be owned by
# a different user. Note! Using "root" for uploaded files is not
# recommended!
<% if @chown_username != '' %>
chown_uploads=YES
chown_username=<%= @chown_username %>
<% end %>
#
# You may override where the log file goes if you like. The default is shown
# below.
xferlog_file=<%= @xferlog_file %>
#
# If you want, you can have your log file in standard ftpd xferlog format.
# Note that the default log file location is /var/log/xferlog in this case.
xferlog_std_format=<%= @xferlog_std_format %>
#
# When enabled, all FTP requests and responses are logged, providing the
# option xferlog_std_format is not enabled. Useful for debugging.
log_ftp_protocol=<%= @log_ftp_protocol %>
#
# You may change the default value for timing out an idle session.
idle_session_timeout=<%= @idle_session_timeout %>
#
# You may change the default value for timing out a data connection.
data_connection_timeout=<%= @data_connection_timeout %>
#
# It is recommended that you define on your system a unique user which the
# ftp server can use as a totally isolated and unprivileged user.
nopriv_user=<%= @nopriv_user %>
#
# Enable this and the server will recognise asynchronous ABOR requests. Not
# recommended for security (the code is non-trivial). Not enabling it,
# however, may confuse older FTP clients.
async_abor_enable=<%= @async_abor_enable %>
#
# By default the server will pretend to allow ASCII mode but in fact ignore
# the request. Turn on the below options to have the server actually do ASCII
# mangling on files when in ASCII mode.
# Beware that on some FTP servers, ASCII support allows a denial of service
# attack (DoS) via the command "SIZE /big/file" in ASCII mode. vsftpd
# predicted this attack and has always been safe, reporting the size of the
# raw file.
# ASCII mangling is a horrible feature of the protocol.
#ascii_upload_enable=YES
#ascii_download_enable=YES
#
# You may fully customise the login banner string:
ftpd_banner=<%= @ftpd_banner %>
#
# You may specify a file of disallowed anonymous e-mail addresses. Apparently
# useful for combatting certain DoS attacks.
#deny_email_enable=YES
# (default follows)
#banned_email_file=/etc/vsftpd.banned_emails
#
# You may restrict local users to their home directories.  See the FAQ for
# the possible risks in this before using chroot_local_user or
# chroot_list_enable below.
chroot_local_user=<%= @chroot_local_user %>
#
# You may specify an explicit list of local users to chroot() to their home
# directory. If chroot_local_user is YES, then this list becomes a list of
# users to NOT chroot().
<% if @chroot_list_file != '' %>
#chroot_list_enable=YES
# (default follows)
chroot_list_file=<%= @chroot_list_file %>
<% end %>

# Deny user list
#
# If enabled, vsftpd will load a list of usernames, from the filename given
# by userlist_file. If a user tries to log in using a name in this file,
# they will be denied before they are asked for a password.
# This may be useful in preventing cleartext passwords being transmitted.
# See also userlist_deny.
userlist_enable=<%= @userlist_enable %>

# This option is examined if userlist_enable is activated. If you set this
# setting to NO, then users will be denied login unless they are explicitly
# listed in the file specified by userlist_file. When login is denied,
# the denial is issued before the user is asked for a password.
userlist_deny=<%= @userlist_deny %>

userlist_file=<%= @userlist_file %>

# This option is useful is conjunction with virtual users. It is used to
# automatically generate a home directory for each virtual user, based on a
# template. For example, if the home directory of the real user specified via
# guest_username is /home/virtual/$USER, and user_sub_token is set to $USER,
# then when virtual user fred logs in, he will end up (usually chroot()'ed) in
# the directory /home/virtual/fred. This option also takes affect if local_root
# contains user_sub_token.
user_sub_token=<%= @user_sub_token %>

# This option represents a directory which vsftpd will try to change into
# after a local (i.e. non-anonymous) login. Failure is silently ignored.
local_root=<%= @local_root %>

#
# You may activate the "-R" option to the builtin ls. This is disabled by
# default to avoid remote users being able to cause excessive I/O on large
# sites. However, some broken FTP clients such as "ncftp" and "mirror" assume
# the presence of the "-R" option, so there is a strong case for enabling it.
#ls_recurse_enable=YES
#
# Debian customization
#
# Some of vsftpd's settings don't fit the Debian filesystem layout by
# default.  These settings are more Debian-friendly.
#
# This option should be the name of a directory which is empty.  Also, the
# directory should not be writable by the ftp user. This directory is used
# as a secure chroot() jail at times vsftpd does not require filesystem
# access.
secure_chroot_dir=<%= @secure_chroot_dir %>
#
# This string is the name of the PAM service vsftpd will use.
pam_service_name=vsftpd

# If enabled, vsftpd will try and show session status information in the
# system process listing. In other words, the reported name of the process
# will change to reflect what a vsftpd session is doing (idle, downloading etc).
# You probably want to leave this off for security purposes.
setproctitle_enable=<%= @setproctitle_enable %>

<% if @rsa_cert_file && @rsa_private_key_file %>
# Options for SSL
# encrypted connections.
ssl_enable=YES
allow_anon_ssl=<%= @allow_anon_ssl %>
force_local_data_ssl=<%= @force_local_data_ssl %>
force_local_logins_ssl=<%= @force_local_logins_ssl %>

# Disable SSL session reuse (required by WinSCP)
require_ssl_reuse=<%= @require_ssl_reuse %>

# Select which SSL ciphers vsftpd will allow for encrypted SSL connections
# (required by FileZilla)
ssl_ciphers=HIGH

ssl_tlsv1=<%= @ssl_tlsv1 %>
ssl_sslv2=<%= @ssl_sslv2 %>
ssl_sslv3=<%= @ssl_sslv3 %>

#
# This option specifies the location of the RSA certificate to use for SSL
# encrypted connections.
rsa_cert_file=<%= @rsa_cert_file %>
rsa_private_key_file=<%= @rsa_private_key_file %>
<% end %>

#pasv_enable=YES
#pasv_promiscuous=NO
#pasv_min_port=40000
#pasv_max_port=40100
#pasv_address=<%= @ipaddress %>
#pasv_addr_resolve=NO
#port_promiscuous=NO
